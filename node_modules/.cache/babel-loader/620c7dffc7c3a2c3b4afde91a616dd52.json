{"ast":null,"code":"import _asyncToGenerator from \"/Users/drewpage/Desktop/CODE/cloudinary-uploader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/drewpage/Desktop/CODE/cloudinary-uploader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/drewpage/Desktop/CODE/cloudinary-uploader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/drewpage/Desktop/CODE/cloudinary-uploader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/drewpage/Desktop/CODE/cloudinary-uploader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/drewpage/Desktop/CODE/cloudinary-uploader/src/CldCustUploadLgRestApi.js\";\nimport _regeneratorRuntime from \"/Users/drewpage/Desktop/CODE/cloudinary-uploader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CldCustUploadLgRestApi = /*#__PURE__*/function (_Component) {\n  _inherits(CldCustUploadLgRestApi, _Component);\n\n  var _super = _createSuper(CldCustUploadLgRestApi);\n\n  function CldCustUploadLgRestApi() {\n    var _this;\n\n    _classCallCheck(this, CldCustUploadLgRestApi);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.processFile = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var file, YOUR_CLOUD_NAME, YOUR_UNSIGNED_UPLOAD_PRESET, POST_URL, XUniqueUploadId, processFile, send, slice, noop;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                noop = function _noop() {};\n\n                slice = function _slice(file, start, end) {\n                  var slice = file.mozSlice ? file.mozSlice : file.webkitSlice ? file.webkitSlice : file.slice ? file.slice : noop;\n                  return slice.bind(file)(start, end);\n                };\n\n                send = function _send(piece, start, end, size) {\n                  console.log(\"start \", start);\n                  console.log(\"end\", end);\n                  var formdata = new FormData();\n                  console.log(XUniqueUploadId);\n                  formdata.append(\"file\", piece);\n                  formdata.append(\"cloud_name\", YOUR_CLOUD_NAME);\n                  formdata.append(\"upload_preset\", YOUR_UNSIGNED_UPLOAD_PRESET);\n                  formdata.append(\"public_id\", \"myChunkedFile2\");\n                  var xhr = new XMLHttpRequest();\n                  xhr.open(\"POST\", POST_URL, false);\n                  xhr.setRequestHeader(\"X-Unique-Upload-Id\", XUniqueUploadId);\n                  xhr.setRequestHeader(\"Content-Range\", \"bytes \" + start + \"-\" + end + \"/\" + size);\n\n                  xhr.onload = function () {\n                    // do something to response\n                    console.log(this.responseText);\n                  };\n\n                  xhr.send(formdata);\n                };\n\n                processFile = function _processFile(e) {\n                  var size = file.size;\n                  var sliceSize = 20000000;\n                  var start = 0;\n                  setTimeout(loop, 3);\n\n                  function loop() {\n                    var end = start + sliceSize;\n\n                    if (end > size) {\n                      end = size;\n                    }\n\n                    var s = slice(file, start, end);\n                    send(s, start, end - 1, size);\n\n                    if (end < size) {\n                      start += sliceSize;\n                      setTimeout(loop, 3);\n                    }\n                  }\n                };\n\n                e.preventDefault();\n                file = e.target.files[0]; // Set your cloud name and unsigned upload preset here:\n\n                YOUR_CLOUD_NAME = \"drewpager\";\n                YOUR_UNSIGNED_UPLOAD_PRESET = \"platos-peach\";\n                POST_URL = \"https://api.cloudinary.com/v1_1/\" + YOUR_CLOUD_NAME + \"/auto/upload\";\n                XUniqueUploadId = new Date();\n                processFile();\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(CldCustUploadLgRestApi, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Upload:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Note: Before choosing a file, set your cloud name and unsigned upload preset in CldCustUploadLgRestApi.js:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"YOUR_CLOUD_NAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"YOUR_UNSIGNED_UPLOAD_PRESET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Test image/video upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.processFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return CldCustUploadLgRestApi;\n}(Component);\n\nexport default CldCustUploadLgRestApi;","map":{"version":3,"sources":["/Users/drewpage/Desktop/CODE/cloudinary-uploader/src/CldCustUploadLgRestApi.js"],"names":["React","Component","CldCustUploadLgRestApi","processFile","e","send","slice","noop","file","start","end","mozSlice","webkitSlice","bind","piece","size","console","log","formdata","FormData","XUniqueUploadId","append","YOUR_CLOUD_NAME","YOUR_UNSIGNED_UPLOAD_PRESET","xhr","XMLHttpRequest","open","POST_URL","setRequestHeader","onload","responseText","sliceSize","setTimeout","loop","s","preventDefault","target","files","Date"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass CldCustUploadLgRestApi extends Component {\n  processFile = async (e) => {\n    e.preventDefault();\n    var file = e.target.files[0];\n\n    // Set your cloud name and unsigned upload preset here:\n    var YOUR_CLOUD_NAME = \"drewpager\";\n    var YOUR_UNSIGNED_UPLOAD_PRESET = \"platos-peach\";\n\n    var POST_URL =\n      \"https://api.cloudinary.com/v1_1/\" + YOUR_CLOUD_NAME + \"/auto/upload\";\n\n    var XUniqueUploadId = new Date();\n\n    processFile();\n\n    function processFile(e) {\n      var size = file.size;\n      var sliceSize = 20000000;\n      var start = 0;\n\n      setTimeout(loop, 3);\n\n      function loop() {\n        var end = start + sliceSize;\n\n        if (end > size) {\n          end = size;\n        }\n        var s = slice(file, start, end);\n        send(s, start, end - 1, size);\n        if (end < size) {\n          start += sliceSize;\n          setTimeout(loop, 3);\n        }\n      }\n    }\n\n    function send(piece, start, end, size) {\n      console.log(\"start \", start);\n      console.log(\"end\", end);\n\n      var formdata = new FormData();\n      console.log(XUniqueUploadId);\n\n      formdata.append(\"file\", piece);\n      formdata.append(\"cloud_name\", YOUR_CLOUD_NAME);\n      formdata.append(\"upload_preset\", YOUR_UNSIGNED_UPLOAD_PRESET);\n      formdata.append(\"public_id\", \"myChunkedFile2\");\n\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", POST_URL, false);\n      xhr.setRequestHeader(\"X-Unique-Upload-Id\", XUniqueUploadId);\n      xhr.setRequestHeader(\n        \"Content-Range\",\n        \"bytes \" + start + \"-\" + end + \"/\" + size\n      );\n\n      xhr.onload = function () {\n        // do something to response\n        console.log(this.responseText);\n      };\n\n      xhr.send(formdata);\n    }\n\n    function slice(file, start, end) {\n      var slice = file.mozSlice\n        ? file.mozSlice\n        : file.webkitSlice\n        ? file.webkitSlice\n        : file.slice\n        ? file.slice\n        : noop;\n\n      return slice.bind(file)(start, end);\n    }\n\n    function noop() {}\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Upload:</h3>\n        <p>\n          Note: Before choosing a file, set your cloud name and unsigned upload\n          preset in CldCustUploadLgRestApi.js:\n        </p>\n        <p>YOUR_CLOUD_NAME</p>\n        <p>YOUR_UNSIGNED_UPLOAD_PRESET</p>\n        <br />\n        <h5>Test image/video upload</h5>\n        <input type=\"file\" onChange={this.processFile} />\n      </div>\n    );\n  }\n}\n\nexport default CldCustUploadLgRestApi;\n"]},"metadata":{},"sourceType":"module"}